(()=>{"use strict";const e="beforeend",t=(t,n,l)=>{switch(t instanceof r&&(t=t.getElement()),n instanceof r&&(n=n.getElement()),l){case"afterbegin":t.prepend(n);break;case e:t.append(n)}},n=e=>{if(!(e instanceof r))throw new Error("Can remove only components");e.getElement().remove(),e.removeElement()};class r{constructor(){if("Abstract"===new.target)throw new Error("Can't instantiate Abstract, only concrete one.");this._element=null,this._callback={}}getTemplate(){throw new Error("Method not implemented: getTemplate")}getElement(){return null===this._element&&(this._element=(e=>{const t=document.createElement("div");return t.innerHTML=e,t.firstChild})(this.getTemplate())),this._element}removeElement(){this._element=null}}class l extends r{constructor(e){super(),this._product=e,this._removeClickHandler=this._removeClickHandler.bind(this)}getTemplate(){return(e=>{const{id:t,title:n,energy:r,protein:l,fat:i,carb:a,measure:o,measureCount:s}=e;return`<li class="product-item" data-id="${t}">\n    <div class="product-top">\n      <h3 class="product-title">${n}</h3>\n      <div class="product-count">\n        <span>${s}</span> ${o}\n      </div>\n    </div>\n\n    <div class="product-bottom">\n      <table class="product-info-table">\n        <tr>\n          <th>Калории</th>\n          <th>Белки</th>\n          <th>Жиры</th>\n          <th>Углеводы</th>\n        </tr>\n        <tr>\n          <td>${r}</td>\n          <td>${l}</td>\n          <td>${i}</td>\n          <td>${a}</td>\n        </tr>\n      </table>\n\n      <div class="controls">\n        <button class="btn btn-remove"></button>\n      </div>\n    </div>\n  </li>`})(this._product)}_removeClickHandler(e){e.preventDefault();const t=Object.assign({},this._product,{isDeleted:!0});this._callback.removeClick(t)}setRemoveClickHandler(e){this._callback.removeClick=e,this.getElement().querySelector(".btn-remove").addEventListener("click",this._removeClickHandler)}}const i=["гр.","шт."];let a=(e=21)=>crypto.getRandomValues(new Uint8Array(e)).reduce(((e,t)=>e+((t&=63)<36?t.toString(36):t<62?(t-26).toString(36).toUpperCase():t>62?"-":"_")),"");class o extends r{constructor(){super(),this._addClickHandler=this._addClickHandler.bind(this)}getTemplate(){return`<form class="add-product-form">\n    <div class="form-field">\n      <label for="title">Название</label>\n      <input type="text" name="title" placeholder="Название" autocomplete="off">\n    </div>\n\n    <div class="form-field">\n      <label for="maker">Производитель</label>\n      <input type="text" name="maker" placeholder="Производитель" autocomplete="off">\n    </div>\n\n    <div class="form-field">\n      <label for="energy">Калории</label>\n      <input type="number" name="energy" placeholder="Калории" inputmode="numeric">\n    </div>\n\n    <div class="form-field">\n      <label for="protein">Белки</label>\n      <input type="number" name="protein" placeholder="Белки" inputmode="numeric">\n    </div>\n\n    <div class="form-field">\n      <label for="fat">Жиры</label>\n      <input type="number" name="fat" placeholder="Жиры" inputmode="numeric">\n    </div>\n\n    <div class="form-field">\n      <label for="carb">Углеводы</label>\n      <input type="number" name="carb" placeholder="Углеводы" inputmode="numeric">\n    </div>\n\n    <div class="form-field">\n      <label for="measure">Единицы</label>\n      <select name="measure">\n        ${i.reduce(((e,t)=>e+`<option value="${t}">${t}</option>`),"")}\n      </select>\n    </div>\n\n    <div class="form-field">\n      <label for="count">Кол-во</label>\n      <input type="number" name="count" placeholder="Кол-во" value="1" inputmode="numeric">\n    </div>\n    <button type="submit" class="btn btn-success btn-save">Добавить</button>\n  </form>`}_addClickHandler(e){e.preventDefault();const t=this.getElement().querySelector('input[name="title"]'),n=this.getElement().querySelector('input[name="maker"]'),r=this.getElement().querySelector('input[name="energy"]'),l=this.getElement().querySelector('input[name="protein"]'),i=this.getElement().querySelector('input[name="fat"]'),o=this.getElement().querySelector('input[name="carb"]'),s=this.getElement().querySelector('select[name="measure"]'),c=this.getElement().querySelector('input[name="count"]');if(""===t.value||""===r.value||""===l.value||""===i.value||""===o.value||""===c.value)return void alert("Заполните все поля!");const d={id:a(),title:t.value,maker:n.value,energy:parseInt(r.value),protein:parseInt(l.value),fat:parseInt(i.value),carb:parseInt(o.value),measure:s.value,measureCount:parseInt(c.value),isVisible:!0};this._callback.addClick(d)}setAddClickHandler(e){this._callback.addClick=e,this.getElement().querySelector(".btn-save").addEventListener("click",this._addClickHandler)}}let s=[];localStorage.getItem("products")&&(s=JSON.parse(localStorage.getItem("products")));const c=document.querySelector(".main"),d=new class{constructor(e,t){this._container=e,this._removeProductClickHandler=this._removeProductClickHandler.bind(this),this._addProductClickHandler=this._addProductClickHandler.bind(this),this._productComponentList={},this._changeData=t,this._addProductFormComponent=new o}init(e){this._products=e,this._clearList(),this._renderList(),this._renderAddProductForm()}_renderList(){this._products.forEach((n=>{if(n.isDeleted)return;const r=new l(n);r.setRemoveClickHandler(this._removeProductClickHandler),this._productComponentList[n.id]=r,t(this._container,r,e)}))}_renderAddProductForm(){this._addProductFormComponent.setAddClickHandler(this._addProductClickHandler),t(this._container,this._addProductFormComponent,e)}_clearList(){Object.values(this._productComponentList).forEach((e=>n(e))),this._productComponentList={},n(this._addProductFormComponent)}_removeProductClickHandler(e){this._changeData(((e,t)=>{const n=e.findIndex((e=>e.id===t.id));return-1===n?e:[...e.slice(0,n),t,...e.slice(n+1)]})(this._products,e))}_addProductClickHandler(e){var t,n;this._changeData((t=this._products,n=e,[...t,n]))}}(c,(e=>{localStorage.setItem("products",JSON.stringify(e)),d.init(e)}));d.init(s)})();